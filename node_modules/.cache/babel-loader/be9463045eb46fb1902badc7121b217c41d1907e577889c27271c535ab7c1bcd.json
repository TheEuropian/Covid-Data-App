{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\livea\\\\React\\\\covid-data-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport DateRangePicker from './components/DateRangeComp';\nimport VisualizationType from \"./components/VisualizationType\";\nimport CountrySelector from './components/CountrySelector';\nimport Viewer from './components/Viewer';\nimport moment from 'moment';\nimport { CovidData } from './components/Data';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('allCountries');\n  const [dateRange, setDateRange] = useState({\n    startDate: moment('2019-12-31'),\n    endDate: moment('2020-12-31')\n  });\n  const [visualizationType, setVisualizationType] = useState(\"table\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await CovidData();\n      setData(result);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await CovidData();\n      setData(result);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    filterData(selectedCountry, dateRange);\n  }, [data, dateRange, filterData, selectedCountry]);\n  const handleCountryChange = event => {\n    const country = event.target.value;\n    setSelectedCountry(country);\n    filterData(country, dateRange);\n  };\n  const handleDateRangeChange = (startDate, endDate) => {\n    setDateRange({\n      startDate,\n      endDate\n    });\n    filterData(selectedCountry, {\n      startDate,\n      endDate\n    });\n  };\n  const countries = useMemo(() => {\n    const uniqueCountries = Array.from(new Set(data.map(item => item.countriesAndTerritories)));\n    const sortedCountries = uniqueCountries.sort();\n    const index = sortedCountries.indexOf(\"allCountries\");\n    if (index > -1) {\n      sortedCountries.splice(index, 1);\n    }\n    return [\"allCountries\", ...sortedCountries];\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Covid Data Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateRangePicker, {\n      dateRange: dateRange,\n      handleDateRangeChange: handleDateRangeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VisualizationType, {\n      visualizationType: visualizationType,\n      setVisualizationType: setVisualizationType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountrySelector, {\n      countries: countries,\n      selectedCountry: selectedCountry,\n      handleCountryChange: handleCountryChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Viewer, {\n      dateRange: dateRange,\n      visualizationType: visualizationType,\n      selectedCountry: selectedCountry,\n      filteredData: filteredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fj6253hy3OCbqQUUbLNzzd4l7z4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","DateRangePicker","VisualizationType","CountrySelector","Viewer","moment","CovidData","jsxDEV","_jsxDEV","App","_s","data","setData","filteredData","setFilteredData","selectedCountry","setSelectedCountry","dateRange","setDateRange","startDate","endDate","visualizationType","setVisualizationType","fetchData","result","filterData","handleCountryChange","event","country","target","value","handleDateRangeChange","countries","uniqueCountries","Array","from","Set","map","item","countriesAndTerritories","sortedCountries","sort","index","indexOf","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/livea/React/covid-data-app/src/App.js"],"sourcesContent":["import React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport DateRangePicker from './components/DateRangeComp';\nimport VisualizationType from \"./components/VisualizationType\";\nimport CountrySelector from  './components/CountrySelector';\nimport Viewer from './components/Viewer';\nimport moment from 'moment';\nimport { CovidData } from './components/Data';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\n\nconst App = () => {\n\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('allCountries');\n  const [dateRange, setDateRange] = useState({ startDate: moment('2019-12-31'), endDate: moment('2020-12-31') });\n  const [visualizationType, setVisualizationType] = useState(\"table\");\n\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await CovidData();\n      setData(result);\n      \n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await CovidData();\n      setData(result);\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    filterData(selectedCountry, dateRange);\n  }, [data, dateRange, filterData, selectedCountry]);\n\n \n\n\n  \n\n  const handleCountryChange = (event) => {\n    const country = event.target.value;\n    setSelectedCountry(country);\n    filterData(country, dateRange);\n  };\n\n  const handleDateRangeChange = (startDate, endDate) => {\n    setDateRange({ startDate, endDate });\n    filterData(selectedCountry, { startDate, endDate });\n  };\n\n  const countries = useMemo(() => {\n    const uniqueCountries = Array.from(\n      new Set(data.map((item) => item.countriesAndTerritories))\n    );\n    const sortedCountries = uniqueCountries.sort();\n    const index = sortedCountries.indexOf(\"allCountries\");\n    if (index > -1) {\n      sortedCountries.splice(index, 1);\n    }\n    return [\"allCountries\", ...sortedCountries];\n  }, [data]);\n\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Covid Data Visualizer</h1>\n      <DateRangePicker dateRange={dateRange} handleDateRangeChange={handleDateRangeChange} />\n      <VisualizationType\n        visualizationType={visualizationType}\n        setVisualizationType={setVisualizationType}\n      />\n      <CountrySelector\n        countries={countries}\n        selectedCountry={selectedCountry}\n        handleCountryChange={handleCountryChange}\n      />\n      <Viewer\n        dateRange={dateRange}\n        visualizationType={visualizationType}\n        selectedCountry={selectedCountry}\n        filteredData={filteredData}\n      />\n    \n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,WAAW,QAAO,OAAO;AACtE,OAAOC,eAAe,MAAM,4BAA4B;AACxD,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,eAAe,MAAO,8BAA8B;AAC3D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,OAAO,sCAAsC;AAC7C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,cAAc,CAAC;EACtE,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC;IAAEsB,SAAS,EAAEd,MAAM,CAAC,YAAY,CAAC;IAAEe,OAAO,EAAEf,MAAM,CAAC,YAAY;EAAE,CAAC,CAAC;EAC9G,MAAM,CAACgB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzB,QAAQ,CAAC,OAAO,CAAC;EAGnEC,SAAS,CAAC,MAAM;IACd,MAAMyB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,MAAM,GAAG,MAAMlB,SAAS,EAAE;MAChCM,OAAO,CAACY,MAAM,CAAC;IAEjB,CAAC;IACDD,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACd,MAAMyB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,MAAM,GAAG,MAAMlB,SAAS,EAAE;MAChCM,OAAO,CAACY,MAAM,CAAC;IACjB,CAAC;IACDD,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACd2B,UAAU,CAACV,eAAe,EAAEE,SAAS,CAAC;EACxC,CAAC,EAAE,CAACN,IAAI,EAAEM,SAAS,EAAEQ,UAAU,EAAEV,eAAe,CAAC,CAAC;EAOlD,MAAMW,mBAAmB,GAAIC,KAAK,IAAK;IACrC,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAClCd,kBAAkB,CAACY,OAAO,CAAC;IAC3BH,UAAU,CAACG,OAAO,EAAEX,SAAS,CAAC;EAChC,CAAC;EAED,MAAMc,qBAAqB,GAAGA,CAACZ,SAAS,EAAEC,OAAO,KAAK;IACpDF,YAAY,CAAC;MAAEC,SAAS;MAAEC;IAAQ,CAAC,CAAC;IACpCK,UAAU,CAACV,eAAe,EAAE;MAAEI,SAAS;MAAEC;IAAQ,CAAC,CAAC;EACrD,CAAC;EAED,MAAMY,SAAS,GAAGjC,OAAO,CAAC,MAAM;IAC9B,MAAMkC,eAAe,GAAGC,KAAK,CAACC,IAAI,CAChC,IAAIC,GAAG,CAACzB,IAAI,CAAC0B,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,uBAAuB,CAAC,CAAC,CAC1D;IACD,MAAMC,eAAe,GAAGP,eAAe,CAACQ,IAAI,EAAE;IAC9C,MAAMC,KAAK,GAAGF,eAAe,CAACG,OAAO,CAAC,cAAc,CAAC;IACrD,IAAID,KAAK,GAAG,CAAC,CAAC,EAAE;MACdF,eAAe,CAACI,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAClC;IACA,OAAO,CAAC,cAAc,EAAE,GAAGF,eAAe,CAAC;EAC7C,CAAC,EAAE,CAAC7B,IAAI,CAAC,CAAC;EAKV,oBACEH,OAAA;IAAKqC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtC,OAAA;MAAAsC,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC9B1C,OAAA,CAACP,eAAe;MAACgB,SAAS,EAAEA,SAAU;MAACc,qBAAqB,EAAEA;IAAsB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACvF1C,OAAA,CAACN,iBAAiB;MAChBmB,iBAAiB,EAAEA,iBAAkB;MACrCC,oBAAoB,EAAEA;IAAqB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3C,eACF1C,OAAA,CAACL,eAAe;MACd6B,SAAS,EAAEA,SAAU;MACrBjB,eAAe,EAAEA,eAAgB;MACjCW,mBAAmB,EAAEA;IAAoB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC,eACF1C,OAAA,CAACJ,MAAM;MACLa,SAAS,EAAEA,SAAU;MACrBI,iBAAiB,EAAEA,iBAAkB;MACrCN,eAAe,EAAEA,eAAgB;MACjCF,YAAY,EAAEA;IAAa;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEE;AAEV,CAAC;AAACxC,EAAA,CAnFID,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AAqFT,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}