{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\livea\\\\React\\\\covid-data-app\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTable, usePagination } from 'react-table';\nimport Pagination from './Pagination';\nimport { COLUMNS } from './columns';\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Table = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const columns = React.useMemo(() => COLUMNS, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    nextPage,\n    previousPage,\n    state: {\n      pageIndex,\n      pageCount\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: 13\n    }\n  }, usePagination);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: page.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      data: true,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      canPreviousPage: canPreviousPage,\n      previousPage: previousPage,\n      canNextPage: canNextPage,\n      nextPage: nextPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Table, \"l1vWXg9bpF54EOEWj/1pXC8a/9w=\", false, function () {\n  return [useTable];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useTable","usePagination","Pagination","COLUMNS","jsxDEV","_jsxDEV","Fragment","_Fragment","Table","_ref","_s","data","columns","useMemo","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","nextPage","previousPage","state","pageIndex","pageCount","initialState","pageSize","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/livea/React/covid-data-app/src/components/Table.js"],"sourcesContent":["import React from 'react';\r\nimport { useTable, usePagination } from 'react-table';\r\nimport Pagination from './Pagination';\r\nimport { COLUMNS } from './columns';\r\nimport './table.css';\r\n\r\nconst Table = ({ data }) => {\r\n  const columns = React.useMemo(() => COLUMNS, []);\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    nextPage,\r\n    previousPage,\r\n    state: { pageIndex, pageCount },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0, pageSize: 13 },\r\n    },\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <Pagination\r\n        data\r\n        pageIndex={pageIndex}\r\n        pageCount={pageCount}\r\n        canPreviousPage={canPreviousPage}\r\n        previousPage={previousPage}\r\n        canNextPage={canNextPage}\r\n        nextPage={nextPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}