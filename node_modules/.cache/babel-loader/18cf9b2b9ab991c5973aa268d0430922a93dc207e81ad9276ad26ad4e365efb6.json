{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\livea\\\\React\\\\covid-data-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport DateRangeComp from \"./components/DateRangeComp\";\nimport CountrySelector from \"./components/CountrySelector\";\nimport Viewer from \"./components/Viewer\";\nimport moment from \"moment\";\nimport { CovidData } from \"./components/Data\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(\"allCountries\");\n  const [dateRange] = useState({\n    startDate: moment(\"2019-12-31\", \"YYYY-MM-DD\"),\n    endDate: moment(\"2020-12-31\", \"YYYY-MM-DD\")\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await CovidData();\n      setData(result);\n    };\n    fetchData();\n  }, []);\n  const filterData = useCallback((country, dateRange) => {\n    let filtered = data;\n    if (country) {\n      if (country === 'allCountries') {\n        filtered = data;\n      } else {\n        filtered = filtered.filter(item => item.countriesAndTerritories === country);\n      }\n    }\n    if (dateRange.startDate && dateRange.endDate) {\n      filtered = filtered.filter(item => moment(item.date).isBetween(dateRange.startDate, dateRange.endDate, undefined, '[]'));\n    }\n    setFilteredData(filtered);\n  }, [data]);\n  useEffect(() => {\n    filterData(selectedCountry, dateRange);\n  }, [data, dateRange, filterData, selectedCountry]);\n  const handleCountryChange = event => {\n    const country = event.target.value;\n    setSelectedCountry(country);\n    filterData(country, {\n      startDate: moment('2019-12-31'),\n      endDate: moment('2020-12-31')\n    });\n  };\n  const handleDateRangeChange = _ref => {\n    let {\n      startDate,\n      endDate\n    } = _ref;\n    filterData(selectedCountry, {\n      startDate,\n      endDate\n    });\n  };\n  const countries = useMemo(() => {\n    const uniqueCountries = Array.from(new Set(data.map(item => item.countriesAndTerritories)));\n    const sortedCountries = uniqueCountries.sort();\n    const index = sortedCountries.indexOf('allCountries');\n    if (index > -1) {\n      sortedCountries.splice(index, 1);\n    }\n    return ['allCountries', ...sortedCountries];\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Covid Data Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateRangePicker, {\n      onDateRangeChange: handleDateRangeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountrySelector, {\n      countries: countries,\n      selectedCountry: selectedCountry,\n      handleCountryChange: handleCountryChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Viewer, {\n      selectedCountry: selectedCountry,\n      filteredData: filteredData || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"22fdyYf5ojMCeXNZV4QR+b2lmsE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","DateRangeComp","CountrySelector","Viewer","moment","CovidData","jsxDEV","_jsxDEV","App","_s","data","setData","filteredData","setFilteredData","selectedCountry","setSelectedCountry","dateRange","startDate","endDate","fetchData","result","filterData","country","filtered","filter","item","countriesAndTerritories","date","isBetween","undefined","handleCountryChange","event","target","value","handleDateRangeChange","_ref","countries","uniqueCountries","Array","from","Set","map","sortedCountries","sort","index","indexOf","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","DateRangePicker","onDateRangeChange","_c","$RefreshReg$"],"sources":["C:/Users/livea/React/covid-data-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport DateRangeComp from \"./components/DateRangeComp\";\nimport CountrySelector from \"./components/CountrySelector\";\nimport Viewer from \"./components/Viewer\";\nimport moment from \"moment\";\nimport { CovidData } from \"./components/Data\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(\"allCountries\");\n  const [dateRange] = useState({\n    startDate: moment(\"2019-12-31\", \"YYYY-MM-DD\"),\n    endDate: moment(\"2020-12-31\", \"YYYY-MM-DD\"),\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await CovidData();\n      setData(result);\n    };\n    fetchData();\n  }, []);\n\n  const filterData = useCallback(\n    (country, dateRange) => {\n      let filtered = data;\n\n      if (country) {\n        if (country === 'allCountries') {\n          filtered = data;\n        } else {\n          filtered = filtered.filter(\n            (item) => item.countriesAndTerritories === country\n          );\n        }\n      }\n\n      if (dateRange.startDate && dateRange.endDate) {\n        filtered = filtered.filter((item) =>\n          moment(item.date).isBetween(\n            dateRange.startDate,\n            dateRange.endDate,\n            undefined,\n            '[]'\n          )\n        );\n      }\n\n      setFilteredData(filtered);\n    },\n    [data]\n  );\n\n  useEffect(() => {\n    filterData(selectedCountry, dateRange);\n  }, [data, dateRange, filterData, selectedCountry]);\n \n\n  const handleCountryChange = (event) => {\n    const country = event.target.value;\n    setSelectedCountry(country);\n    filterData(country, { startDate: moment('2019-12-31'), endDate: moment('2020-12-31') });\n  };\n\n  const handleDateRangeChange = ({ startDate, endDate }) => {\n    filterData(selectedCountry, { startDate, endDate });\n  };\n\n  const countries = useMemo(() => {\n    const uniqueCountries = Array.from(\n      new Set(data.map((item) => item.countriesAndTerritories))\n    );\n    const sortedCountries = uniqueCountries.sort();\n    const index = sortedCountries.indexOf('allCountries');\n    if (index > -1) {\n      sortedCountries.splice(index, 1);\n    }\n    return ['allCountries', ...sortedCountries];\n  }, [data]);\n\n  return (\n    <div className=\"App\">\n      <h1>Covid Data Visualizer</h1>\n      <DateRangePicker onDateRangeChange={handleDateRangeChange} />\n      <CountrySelector\n        countries={countries}\n        selectedCountry={selectedCountry}\n        handleCountryChange={handleCountryChange}\n      />\n      <Viewer\n        selectedCountry={selectedCountry}\n        filteredData={filteredData || []}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}