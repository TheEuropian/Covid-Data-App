{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withDirectionPropTypes = exports.DIRECTIONS = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nexports['default'] = withDirection;\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _hoistNonReactStatics = require('hoist-non-react-statics');\nvar _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);\nvar _deepmerge = require('deepmerge');\nvar _deepmerge2 = _interopRequireDefault(_deepmerge);\nvar _getComponentName = require('airbnb-prop-types/build/helpers/getComponentName');\nvar _getComponentName2 = _interopRequireDefault(_getComponentName);\nvar _constants = require('./constants');\nvar _brcast = require('./proptypes/brcast');\nvar _brcast2 = _interopRequireDefault(_brcast);\nvar _direction = require('./proptypes/direction');\nvar _direction2 = _interopRequireDefault(_direction);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n} /* eslint-disable react/forbid-foreign-prop-types */\n// This higher-order component consumes a string from React context that is\n// provided by the DirectionProvider component.\n// We can use this to conditionally switch layout/direction for right-to-left layouts.\n\nvar contextTypes = _defineProperty({}, _constants.CHANNEL, _brcast2['default']);\nexports.DIRECTIONS = _constants.DIRECTIONS;\n\n// set a default direction so that a component wrapped with this HOC can be\n// used even without a DirectionProvider ancestor in its react tree.\n\nvar defaultDirection = _constants.DIRECTIONS.LTR;\n\n// export for convenience, in order for components to spread these onto their propTypes\nvar withDirectionPropTypes = exports.withDirectionPropTypes = {\n  direction: _direction2['default'].isRequired\n};\nfunction withDirection(WrappedComponent) {\n  var WithDirection = function (_React$Component) {\n    _inherits(WithDirection, _React$Component);\n    function WithDirection(props, context) {\n      _classCallCheck(this, WithDirection);\n      var _this = _possibleConstructorReturn(this, (WithDirection.__proto__ || Object.getPrototypeOf(WithDirection)).call(this, props, context));\n      _this.state = {\n        direction: context[_constants.CHANNEL] ? context[_constants.CHANNEL].getState() : defaultDirection\n      };\n      return _this;\n    }\n    _createClass(WithDirection, [{\n      key: 'componentDidMount',\n      value: function () {\n        function componentDidMount() {\n          var _this2 = this;\n          if (this.context[_constants.CHANNEL]) {\n            // subscribe to future direction changes\n            this.channelUnsubscribe = this.context[_constants.CHANNEL].subscribe(function (direction) {\n              _this2.setState({\n                direction: direction\n              });\n            });\n          }\n        }\n        return componentDidMount;\n      }()\n    }, {\n      key: 'componentWillUnmount',\n      value: function () {\n        function componentWillUnmount() {\n          if (this.channelUnsubscribe) {\n            this.channelUnsubscribe();\n          }\n        }\n        return componentWillUnmount;\n      }()\n    }, {\n      key: 'render',\n      value: function () {\n        function render() {\n          var direction = this.state.direction;\n          return _react2['default'].createElement(WrappedComponent, _extends({}, this.props, {\n            direction: direction\n          }));\n        }\n        return render;\n      }()\n    }]);\n    return WithDirection;\n  }(_react2['default'].Component);\n  var wrappedComponentName = (0, _getComponentName2['default'])(WrappedComponent) || 'Component';\n  WithDirection.WrappedComponent = WrappedComponent;\n  WithDirection.contextTypes = contextTypes;\n  WithDirection.displayName = 'withDirection(' + String(wrappedComponentName) + ')';\n  if (WrappedComponent.propTypes) {\n    WithDirection.propTypes = (0, _deepmerge2['default'])({}, WrappedComponent.propTypes);\n    delete WithDirection.propTypes.direction;\n  }\n  if (WrappedComponent.defaultProps) {\n    WithDirection.defaultProps = (0, _deepmerge2['default'])({}, WrappedComponent.defaultProps);\n  }\n  return (0, _hoistNonReactStatics2['default'])(WithDirection, WrappedComponent);\n}","map":null,"metadata":{},"sourceType":"script"}