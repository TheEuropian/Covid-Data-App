{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\livea\\\\React\\\\covid-data-app\\\\src\\\\components\\\\DateRangeComp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport \"./dateRangeComp.css\";\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateRangeComp = _ref => {\n  _s();\n  let {\n    onDateRangeChange,\n    minDate,\n    maxDate\n  } = _ref;\n  const [startDate, setStartDate] = useState(moment(minDate, 'YYYY-MM-DD').ut());\n  const [endDate, setEndDate] = useState(moment(maxDate, 'YYYY-MM-DD'));\n  useEffect(() => {\n    setStartDate(moment(minDate));\n    setEndDate(moment(maxDate));\n  }, [minDate, maxDate]);\n  const handleDatesChange = ranges => {\n    const {\n      startDate,\n      endDate\n    } = ranges.selection;\n    setStartDate(moment(startDate));\n    setEndDate(moment(endDate));\n    if (onDateRangeChange) {\n      onDateRangeChange(moment(startDate), moment(endDate));\n    }\n  };\n  const selectionRange = {\n    startDate: startDate.toDate(),\n    endDate: endDate.toDate(),\n    key: 'selection'\n  };\n  return /*#__PURE__*/_jsxDEV(DateRangePicker, {\n    ranges: [selectionRange],\n    onChange: handleDatesChange,\n    showSelectionPreview: true,\n    showMonthAndYearPickers: true,\n    months: 1,\n    direction: \"horizontal\",\n    minDate: moment(minDate).toDate(),\n    maxDate: moment(maxDate).toDate()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(DateRangeComp, \"mNV46Ls0uyCj4bHYFKJnIii6bYY=\");\n_c = DateRangeComp;\nexport default DateRangeComp;\nvar _c;\n$RefreshReg$(_c, \"DateRangeComp\");","map":{"version":3,"names":["React","useState","useEffect","DateRangePicker","moment","jsxDEV","_jsxDEV","DateRangeComp","_ref","_s","onDateRangeChange","minDate","maxDate","startDate","setStartDate","ut","endDate","setEndDate","handleDatesChange","ranges","selection","selectionRange","toDate","key","onChange","showSelectionPreview","showMonthAndYearPickers","months","direction","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/livea/React/covid-data-app/src/components/DateRangeComp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport 'react-date-range/dist/styles.css'; // main css file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport \"./dateRangeComp.css\";\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport moment from 'moment';\r\n\r\nconst DateRangeComp = ({ onDateRangeChange, minDate, maxDate }) => {\r\n  const [startDate, setStartDate] = useState(moment(minDate, 'YYYY-MM-DD').ut());\r\n  const [endDate, setEndDate] = useState(moment(maxDate, 'YYYY-MM-DD'));\r\n\r\n  useEffect(() => {\r\n    setStartDate(moment(minDate));\r\n    setEndDate(moment(maxDate));\r\n  }, [minDate, maxDate]);\r\n\r\n  const handleDatesChange = (ranges) => {\r\n    const { startDate, endDate } = ranges.selection;\r\n    setStartDate(moment(startDate));\r\n    setEndDate(moment(endDate));\r\n\r\n    if (onDateRangeChange) {\r\n      onDateRangeChange(moment(startDate), moment(endDate));\r\n    }\r\n  };\r\n\r\n  const selectionRange = {\r\n    startDate: startDate.toDate(),\r\n    endDate: endDate.toDate(),\r\n    key: 'selection',\r\n  };\r\n\r\n  return (\r\n    <DateRangePicker\r\n      ranges={[selectionRange]}\r\n      onChange={handleDatesChange}\r\n      showSelectionPreview={true}\r\n      showMonthAndYearPickers={true}\r\n      months={1}\r\n      direction=\"horizontal\"\r\n      minDate={moment(minDate).toDate()}\r\n      maxDate={moment(maxDate).toDate()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DateRangeComp;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAO,kCAAkC,CAAC,CAAC;AAC3C,OAAO,yCAAyC,CAAC,CAAC;AAClD,OAAO,qBAAqB;AAC5B;AACA,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,aAAa,GAAGC,IAAA,IAA6C;EAAAC,EAAA;EAAA,IAA5C;IAAEC,iBAAiB;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EAC5D,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAACG,MAAM,CAACO,OAAO,EAAE,YAAY,CAAC,CAACI,EAAE,EAAE,CAAC;EAC9E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAACG,MAAM,CAACQ,OAAO,EAAE,YAAY,CAAC,CAAC;EAErEV,SAAS,CAAC,MAAM;IACdY,YAAY,CAACV,MAAM,CAACO,OAAO,CAAC,CAAC;IAC7BM,UAAU,CAACb,MAAM,CAACQ,OAAO,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACD,OAAO,EAAEC,OAAO,CAAC,CAAC;EAEtB,MAAMM,iBAAiB,GAAIC,MAAM,IAAK;IACpC,MAAM;MAAEN,SAAS;MAAEG;IAAQ,CAAC,GAAGG,MAAM,CAACC,SAAS;IAC/CN,YAAY,CAACV,MAAM,CAACS,SAAS,CAAC,CAAC;IAC/BI,UAAU,CAACb,MAAM,CAACY,OAAO,CAAC,CAAC;IAE3B,IAAIN,iBAAiB,EAAE;MACrBA,iBAAiB,CAACN,MAAM,CAACS,SAAS,CAAC,EAAET,MAAM,CAACY,OAAO,CAAC,CAAC;IACvD;EACF,CAAC;EAED,MAAMK,cAAc,GAAG;IACrBR,SAAS,EAAEA,SAAS,CAACS,MAAM,EAAE;IAC7BN,OAAO,EAAEA,OAAO,CAACM,MAAM,EAAE;IACzBC,GAAG,EAAE;EACP,CAAC;EAED,oBACEjB,OAAA,CAACH,eAAe;IACdgB,MAAM,EAAE,CAACE,cAAc,CAAE;IACzBG,QAAQ,EAAEN,iBAAkB;IAC5BO,oBAAoB,EAAE,IAAK;IAC3BC,uBAAuB,EAAE,IAAK;IAC9BC,MAAM,EAAE,CAAE;IACVC,SAAS,EAAC,YAAY;IACtBjB,OAAO,EAAEP,MAAM,CAACO,OAAO,CAAC,CAACW,MAAM,EAAG;IAClCV,OAAO,EAAER,MAAM,CAACQ,OAAO,CAAC,CAACU,MAAM;EAAG;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClC;AAEN,CAAC;AAACvB,EAAA,CArCIF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}