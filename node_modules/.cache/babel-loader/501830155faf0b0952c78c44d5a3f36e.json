{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\livea\\\\React\\\\covid-data-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\livea\\\\React\\\\covid-data-app\\\\src\\\\components\\\\Graph.js\";\nimport React, { useMemo } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nfunction Graph(_ref) {\n  var data = _ref.data,\n    selectedCountry = _ref.selectedCountry;\n  // Filter data based on selected country and time range\n  var filteredData = useMemo(function () {\n    var dataToFilter = data.filter(function (item) {\n      if (selectedCountry === \"Afganistan\") return true;\n      return item.countriesAndTerritories === selectedCountry;\n    });\n    if (timeRange) {\n      var _timeRange = timeRange,\n        _timeRange2 = _slicedToArray(_timeRange, 2),\n        start = _timeRange2[0],\n        end = _timeRange2[1];\n      dataToFilter = dataToFilter.filter(function (item) {\n        var date = new Date(item.date).getTime();\n        return date >= start && date <= end;\n      });\n    }\n    return dataToFilter;\n  }, [data, selectedCountry, timeRange]);\n  var series = [{\n    name: \"Cases\",\n    data: filteredData.map(function (item) {\n      return item.allCases;\n    })\n  }, {\n    name: \"Deaths\",\n    data: filteredData.map(function (item) {\n      return item.allDeaths;\n    })\n  }];\n  var xaxisCategories = filteredData.map(function (item) {\n    return item.isoDateString;\n  });\n  var options = {\n    chart: {\n      height: 350,\n      type: \"area\"\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: \"smooth\"\n    },\n    xaxis: {\n      type: \"datetime\",\n      categories: xaxisCategories\n    },\n    tooltip: {\n      x: {\n        format: \"dd/MM/yyyy\"\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactApexChart, {\n    options: options,\n    series: series,\n    type: \"area\",\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\nexport default Graph;","map":{"version":3,"names":["React","useMemo","ReactApexChart","Graph","_ref","data","selectedCountry","filteredData","dataToFilter","filter","item","countriesAndTerritories","timeRange","_timeRange","_timeRange2","_slicedToArray","start","end","date","Date","getTime","series","name","map","allCases","allDeaths","xaxisCategories","isoDateString","options","chart","height","type","dataLabels","enabled","stroke","curve","xaxis","categories","tooltip","x","format","createElement","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/livea/React/covid-data-app/src/components/Graph.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nfunction Graph({ data, selectedCountry }) {\r\n  // Filter data based on selected country and time range\r\n  const filteredData = useMemo(() => {\r\n    let dataToFilter = data.filter((item) => {\r\n      if (selectedCountry === \"Afganistan\") return true;\r\n      return item.countriesAndTerritories === selectedCountry;\r\n    });\r\n\r\n    if (timeRange) {\r\n      const [start, end] = timeRange;\r\n      dataToFilter = dataToFilter.filter((item) => {\r\n        const date = new Date(item.date).getTime();\r\n        return date >= start && date <= end;\r\n      });\r\n    }\r\n\r\n    return dataToFilter;\r\n  }, [data, selectedCountry, timeRange]);\r\n\r\n  const series = [\r\n    {\r\n      name: \"Cases\",\r\n      data: filteredData.map((item) => item.allCases),\r\n    },\r\n    {\r\n      name: \"Deaths\",\r\n      data: filteredData.map((item) => item.allDeaths),\r\n    },\r\n  ];\r\n\r\n  const xaxisCategories = filteredData.map((item) => item.isoDateString);\r\n\r\n  const options = {\r\n    chart: {\r\n      height: 350,\r\n      type: \"area\",\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      curve: \"smooth\",\r\n    },\r\n    xaxis: {\r\n      type: \"datetime\",\r\n      categories: xaxisCategories,\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        format: \"dd/MM/yyyy\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <ReactApexChart options={options} series={series} type=\"area\" height={350} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,SAASC,KAAKA,CAAAC,IAAA,EAA4B;EAAA,IAAzBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,eAAe,GAAAF,IAAA,CAAfE,eAAe;EACpC;EACA,IAAMC,YAAY,GAAGN,OAAO,CAAC,YAAM;IACjC,IAAIO,YAAY,GAAGH,IAAI,CAACI,MAAM,CAAC,UAACC,IAAI,EAAK;MACvC,IAAIJ,eAAe,KAAK,YAAY,EAAE,OAAO,IAAI;MACjD,OAAOI,IAAI,CAACC,uBAAuB,KAAKL,eAAe;IACzD,CAAC,CAAC;IAEF,IAAIM,SAAS,EAAE;MAAA,IAAAC,UAAA,GACQD,SAAS;QAAAE,WAAA,GAAAC,cAAA,CAAAF,UAAA;QAAvBG,KAAK,GAAAF,WAAA;QAAEG,GAAG,GAAAH,WAAA;MACjBN,YAAY,GAAGA,YAAY,CAACC,MAAM,CAAC,UAACC,IAAI,EAAK;QAC3C,IAAMQ,IAAI,GAAG,IAAIC,IAAI,CAACT,IAAI,CAACQ,IAAI,CAAC,CAACE,OAAO,EAAE;QAC1C,OAAOF,IAAI,IAAIF,KAAK,IAAIE,IAAI,IAAID,GAAG;MACrC,CAAC,CAAC;IACJ;IAEA,OAAOT,YAAY;EACrB,CAAC,EAAE,CAACH,IAAI,EAAEC,eAAe,EAAEM,SAAS,CAAC,CAAC;EAEtC,IAAMS,MAAM,GAAG,CACb;IACEC,IAAI,EAAE,OAAO;IACbjB,IAAI,EAAEE,YAAY,CAACgB,GAAG,CAAC,UAACb,IAAI;MAAA,OAAKA,IAAI,CAACc,QAAQ;IAAA;EAChD,CAAC,EACD;IACEF,IAAI,EAAE,QAAQ;IACdjB,IAAI,EAAEE,YAAY,CAACgB,GAAG,CAAC,UAACb,IAAI;MAAA,OAAKA,IAAI,CAACe,SAAS;IAAA;EACjD,CAAC,CACF;EAED,IAAMC,eAAe,GAAGnB,YAAY,CAACgB,GAAG,CAAC,UAACb,IAAI;IAAA,OAAKA,IAAI,CAACiB,aAAa;EAAA,EAAC;EAEtE,IAAMC,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,MAAM,EAAE,GAAG;MACXC,IAAI,EAAE;IACR,CAAC;IACDC,UAAU,EAAE;MACVC,OAAO,EAAE;IACX,CAAC;IACDC,MAAM,EAAE;MACNC,KAAK,EAAE;IACT,CAAC;IACDC,KAAK,EAAE;MACLL,IAAI,EAAE,UAAU;MAChBM,UAAU,EAAEX;IACd,CAAC;IACDY,OAAO,EAAE;MACPC,CAAC,EAAE;QACDC,MAAM,EAAE;MACV;IACF;EACF,CAAC;EAED,oBACExC,KAAA,CAAAyC,aAAA;IAAKC,EAAE,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACbhD,KAAA,CAAAyC,aAAA,CAACvC,cAAc;IAAC0B,OAAO,EAAEA,OAAQ;IAACP,MAAM,EAAEA,MAAO;IAACU,IAAI,EAAC,MAAM;IAACD,MAAM,EAAE,GAAI;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CACzE;AAEV;AAEA,eAAe7C,KAAK"},"metadata":{},"sourceType":"module"}