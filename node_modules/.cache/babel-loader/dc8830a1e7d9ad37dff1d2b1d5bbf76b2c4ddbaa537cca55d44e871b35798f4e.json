{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\livea\\\\React\\\\covid-data-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport DateRangeComp from \"./components/DateRangeComp\";\nimport CountrySelector from \"./components/CountrySelector\";\nimport Viewer from \"./components/Viewer\";\nimport moment from \"moment\";\nimport CovidData from \"./components/Data\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(\"All_countries\");\n  const [dateRange, setDateRange] = useState({\n    startDate: null,\n    endDate: null\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await CovidData();\n      setData(result);\n    };\n    fetchData();\n  }, []);\n  const filterData = useCallback((country, dateRange) => {\n    let filtered = data;\n    if (country) {\n      if (country === \"All_countries\") {\n        filtered = filtered.filter(item => item.countriesAndTerritories === country);\n      } else {\n        filtered = filtered.filter(item => item.countriesAndTerritories === country);\n      }\n    }\n    if (dateRange.startDate && dateRange.endDate) {\n      filtered = filtered.filter(item => moment(item.date).isBetween(dateRange.startDate, dateRange.endDate, undefined, \"[]\"));\n    }\n    setFilteredData(filtered);\n  }, [data]);\n  useEffect(() => {\n    filterData(selectedCountry, dateRange);\n  }, [data, selectedCountry, dateRange, filterData]);\n  const handleCountryChange = useCallback(event => {\n    const country = event.target.value;\n    setSelectedCountry(country);\n    filterData(country, dateRange);\n  }, [filterData, dateRange]);\n  const handleDateChange = useCallback((startDate, endDate) => {\n    setDateRange({\n      startDate,\n      endDate\n    });\n    filterData(selectedCountry, {\n      startDate,\n      endDate\n    });\n  }, [filterData, selectedCountry]);\n  const countries = useMemo(() => {\n    const uniqueCountries = Array.from(new Set(data.map(item => item.countriesAndTerritories)));\n    const sortedCountries = uniqueCountries.sort();\n    const index = sortedCountries.indexOf(\"All_countries\");\n    if (index > -1) {\n      sortedCountries.splice(index, 1);\n    }\n    return [\"All_countries\", ...sortedCountries];\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Covid Data Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateRangeComp, {\n      onDatesChange: handleDateChange,\n      minDate: moment(\"2019-12-31\", 'YYYY-MM-DD'),\n      maxDate: moment(\"2020-12-31\", 'YYYY-MM-DD')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountrySelector, {\n      countries: countries,\n      selectedCountry: selectedCountry,\n      handleCountryChange: handleCountryChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Viewer, {\n      selectedCountry: selectedCountry,\n      filteredData: filteredData || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7vJs0rB45xqqLocZkteKKeEieqo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","DateRangeComp","CountrySelector","Viewer","moment","CovidData","jsxDEV","_jsxDEV","App","_s","data","setData","filteredData","setFilteredData","selectedCountry","setSelectedCountry","dateRange","setDateRange","startDate","endDate","fetchData","result","filterData","country","filtered","filter","item","countriesAndTerritories","date","isBetween","undefined","handleCountryChange","event","target","value","handleDateChange","countries","uniqueCountries","Array","from","Set","map","sortedCountries","sort","index","indexOf","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDatesChange","minDate","maxDate","_c","$RefreshReg$"],"sources":["C:/Users/livea/React/covid-data-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport DateRangeComp from \"./components/DateRangeComp\";\nimport CountrySelector from \"./components/CountrySelector\";\nimport Viewer from \"./components/Viewer\";\nimport moment from \"moment\";\nimport CovidData from \"./components/Data\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(\"All_countries\");\n  const [dateRange, setDateRange] = useState({ startDate: null, endDate: null });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await CovidData();\n      setData(result);\n    };\n    fetchData();\n  }, []);\n\n  const filterData = useCallback((country, dateRange) => {\n    let filtered = data;\n    if (country) {\n      if (country === \"All_countries\") {\n        filtered = filtered.filter(\n          (item) => item.countriesAndTerritories === country\n        );\n      } else {\n        filtered = filtered.filter(\n          (item) => item.countriesAndTerritories === country\n        );\n      }\n    }\n\n    if (dateRange.startDate && dateRange.endDate) {\n      filtered = filtered.filter((item) =>\n        moment(item.date).isBetween(\n          dateRange.startDate,\n          dateRange.endDate,\n          undefined,\n          \"[]\"\n        )\n      );\n    }\n\n    setFilteredData(filtered);\n  }, [data]);\n\n\n  useEffect(() => {\n    filterData(selectedCountry, dateRange);\n  }, [data, selectedCountry, dateRange, filterData]);\n\n  const handleCountryChange = useCallback(\n    (event) => {\n      const country = event.target.value;\n      setSelectedCountry(country);\n      filterData(country, dateRange);\n    },\n    [filterData, dateRange]\n  );\n\n  const handleDateChange = useCallback(\n    (startDate, endDate) => {\n      setDateRange({ startDate, endDate });\n      filterData(selectedCountry, { startDate, endDate });\n    },\n    [filterData, selectedCountry]\n  );\n\n  const countries = useMemo(() => {\n    const uniqueCountries = Array.from(\n      new Set(data.map((item) => item.countriesAndTerritories))\n    );\n    const sortedCountries = uniqueCountries.sort();\n    const index = sortedCountries.indexOf(\"All_countries\");\n    if (index > -1) {\n      sortedCountries.splice(index, 1);\n    }\n    return [\"All_countries\", ...sortedCountries];\n  }, [data]);\n\n  return (\n    <div className=\"App\">\n      <h1>Covid Data Visualizer</h1>\n      <DateRangeComp\n        onDatesChange={handleDateChange}\n        minDate={moment(\"2019-12-31\", 'YYYY-MM-DD')} \n        maxDate={moment(\"2020-12-31\", 'YYYY-MM-DD')} \n      />\n\n      <CountrySelector\n        countries={countries}\n        selectedCountry={selectedCountry}\n        handleCountryChange={handleCountryChange}\n      />\n      <Viewer selectedCountry={selectedCountry} filteredData={filteredData || []} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}