{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\livea\\\\React\\\\covid-data-app\\\\src\\\\components\\\\DateRangeComp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateRangeComp = _ref => {\n  _s();\n  let {\n    onDateRangeChange,\n    minDate,\n    maxDate\n  } = _ref;\n  const [startDate, setStartDate] = useState(moment(minDate));\n  const [endDate, setEndDate] = useState(moment(maxDate));\n  const [focusedInput, setFocusedInput] = useState(null);\n  useEffect(() => {\n    setStartDate(moment(minDate));\n    setEndDate(moment(maxDate));\n  }, [minDate, maxDate]);\n  const handleDatesChange = _ref2 => {\n    let {\n      startDate,\n      endDate\n    } = _ref2;\n    setStartDate(startDate);\n    setEndDate(endDate);\n    if (onDateRangeChange) {\n      onDateRangeChange(startDate, endDate);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DateRangePicker, {\n    startDate: startDate,\n    startDateId: \"start_date\",\n    endDate: endDate,\n    endDateId: \"end_date\",\n    onDatesChange: handleDatesChange,\n    focusedInput: focusedInput,\n    onFocusChange: focusedInput => setFocusedInput(focusedInput),\n    numberOfMonths: 1,\n    isOutsideRange: () => false,\n    showClearDates: true,\n    displayFormat: \"yyyy--DD\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(DateRangeComp, \"vPa3D9F2zaEvDhUOHhg6cOwO4yM=\");\n_c = DateRangeComp;\nexport default DateRangeComp;\nvar _c;\n$RefreshReg$(_c, \"DateRangeComp\");","map":{"version":3,"names":["React","useState","useEffect","DateRangePicker","moment","jsxDEV","_jsxDEV","DateRangeComp","_ref","_s","onDateRangeChange","minDate","maxDate","startDate","setStartDate","endDate","setEndDate","focusedInput","setFocusedInput","handleDatesChange","_ref2","startDateId","endDateId","onDatesChange","onFocusChange","numberOfMonths","isOutsideRange","showClearDates","displayFormat","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/livea/React/covid-data-app/src/components/DateRangeComp.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport 'react-dates/initialize';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport moment from 'moment';\r\n\r\nconst DateRangeComp = ({ onDateRangeChange, minDate, maxDate }) => {\r\n  const [startDate, setStartDate] = useState(moment(minDate));\r\n  const [endDate, setEndDate] = useState(moment(maxDate));\r\n  const [focusedInput, setFocusedInput] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setStartDate(moment(minDate));\r\n    setEndDate(moment(maxDate));\r\n  }, [minDate, maxDate]);\r\n\r\n  const handleDatesChange = ({ startDate, endDate }) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n\r\n    if (onDateRangeChange) {\r\n      onDateRangeChange(startDate, endDate);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DateRangePicker\r\n      startDate={startDate}\r\n      startDateId=\"start_date\"\r\n      endDate={endDate}\r\n      endDateId=\"end_date\"\r\n      onDatesChange={handleDatesChange}\r\n      focusedInput={focusedInput}\r\n      onFocusChange={(focusedInput) => setFocusedInput(focusedInput)}\r\n      numberOfMonths={1}\r\n      isOutsideRange={() => false}\r\n      showClearDates={true}\r\n      displayFormat=\"yyyy--DD\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default DateRangeComp;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAC/B,SAASC,eAAe,QAAQ,aAAa;AAC7C,OAAO,qCAAqC;AAC5C,OAAO,sCAAsC;AAC7C,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,aAAa,GAAGC,IAAA,IAA6C;EAAAC,EAAA;EAAA,IAA5C;IAAEC,iBAAiB;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EAC5D,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAACG,MAAM,CAACO,OAAO,CAAC,CAAC;EAC3D,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAACG,MAAM,CAACQ,OAAO,CAAC,CAAC;EACvD,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdY,YAAY,CAACV,MAAM,CAACO,OAAO,CAAC,CAAC;IAC7BK,UAAU,CAACZ,MAAM,CAACQ,OAAO,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACD,OAAO,EAAEC,OAAO,CAAC,CAAC;EAEtB,MAAMO,iBAAiB,GAAGC,KAAA,IAA4B;IAAA,IAA3B;MAAEP,SAAS;MAAEE;IAAQ,CAAC,GAAAK,KAAA;IAC/CN,YAAY,CAACD,SAAS,CAAC;IACvBG,UAAU,CAACD,OAAO,CAAC;IAEnB,IAAIL,iBAAiB,EAAE;MACrBA,iBAAiB,CAACG,SAAS,EAAEE,OAAO,CAAC;IACvC;EACF,CAAC;EAED,oBACET,OAAA,CAACH,eAAe;IACdU,SAAS,EAAEA,SAAU;IACrBQ,WAAW,EAAC,YAAY;IACxBN,OAAO,EAAEA,OAAQ;IACjBO,SAAS,EAAC,UAAU;IACpBC,aAAa,EAAEJ,iBAAkB;IACjCF,YAAY,EAAEA,YAAa;IAC3BO,aAAa,EAAGP,YAAY,IAAKC,eAAe,CAACD,YAAY,CAAE;IAC/DQ,cAAc,EAAE,CAAE;IAClBC,cAAc,EAAEA,CAAA,KAAM,KAAM;IAC5BC,cAAc,EAAE,IAAK;IACrBC,aAAa,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxB;AAEN,CAAC;AAACvB,EAAA,CAlCIF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}