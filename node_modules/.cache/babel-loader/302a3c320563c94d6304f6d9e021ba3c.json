{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\livea\\\\React\\\\covid-data-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\livea\\\\React\\\\covid-data-app\\\\src\\\\components\\\\DateRangeComp.js\";\nimport React, { useState } from 'react';\nimport 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport moment from 'moment';\nvar DateRangeComp = function DateRangeComp(_ref) {\n  var onDateRangeChange = _ref.onDateRangeChange,\n    minDate = _ref.minDate,\n    maxDate = _ref.maxDate;\n  var _useState = useState(moment(minDate)),\n    _useState2 = _slicedToArray(_useState, 2),\n    startDate = _useState2[0],\n    setStartDate = _useState2[1];\n  var _useState3 = useState(moment(maxDate)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    endDate = _useState4[0],\n    setEndDate = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    focusedInput = _useState6[0],\n    setFocusedInput = _useState6[1];\n  var handleDatesChange = function handleDatesChange(_ref2) {\n    var startDate = _ref2.startDate,\n      endDate = _ref2.endDate;\n    setStartDate(startDate);\n    setEndDate(endDate);\n    if (onDateRangeChange) {\n      onDateRangeChange(startDate, endDate);\n    }\n  };\n  return /*#__PURE__*/React.createElement(DateRangePicker, {\n    startDate: startDate,\n    startDateId: \"start_date\",\n    endDate: endDate,\n    endDateId: \"end_date\",\n    onDatesChange: handleDatesChange,\n    focusedInput: focusedInput,\n    onFocusChange: function onFocusChange(focusedInput) {\n      return setFocusedInput(focusedInput);\n    },\n    numberOfMonths: 1,\n    isOutsideRange: function isOutsideRange() {\n      return false;\n    },\n    showClearDates: true,\n    displayFormat: \"yyyy-MM-DD\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n};\nexport default DateRangeComp;","map":{"version":3,"names":["React","useState","DateRangePicker","moment","DateRangeComp","_ref","onDateRangeChange","minDate","maxDate","_useState","_useState2","_slicedToArray","startDate","setStartDate","_useState3","_useState4","endDate","setEndDate","_useState5","_useState6","focusedInput","setFocusedInput","handleDatesChange","_ref2","createElement","startDateId","endDateId","onDatesChange","onFocusChange","numberOfMonths","isOutsideRange","showClearDates","displayFormat","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/livea/React/covid-data-app/src/components/DateRangeComp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport 'react-dates/initialize';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport moment from 'moment';\r\n\r\n const DateRangeComp = ({ onDateRangeChange, minDate, maxDate }) => { \r\n  const [startDate, setStartDate] = useState( moment(minDate));\r\n  const [endDate, setEndDate] = useState(moment(maxDate));\r\n  const [focusedInput, setFocusedInput] = useState(null);\r\n\r\n  const handleDatesChange = ({ startDate, endDate }) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n\r\n    if (onDateRangeChange) {\r\n      onDateRangeChange(startDate, endDate);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DateRangePicker\r\n      startDate={startDate}\r\n      startDateId=\"start_date\"\r\n      endDate={endDate}\r\n      endDateId=\"end_date\"\r\n      onDatesChange={handleDatesChange}\r\n      focusedInput={focusedInput}\r\n      onFocusChange={(focusedInput) => setFocusedInput(focusedInput)}\r\n      numberOfMonths={1}\r\n      isOutsideRange={() => false}\r\n      showClearDates={true}\r\n      displayFormat=\"yyyy-MM-DD\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default DateRangeComp;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAC/B,SAASC,eAAe,QAAQ,aAAa;AAC7C,OAAO,qCAAqC;AAC5C,OAAO,sCAAsC;AAC7C,OAAOC,MAAM,MAAM,QAAQ;AAE1B,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAgD;EAAA,IAA1CC,iBAAiB,GAAAD,IAAA,CAAjBC,iBAAiB;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;EAAA,IAAAC,SAAA,GACzBR,QAAQ,CAAEE,MAAM,CAACI,OAAO,CAAC,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArDG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACAb,QAAQ,CAACE,MAAM,CAACK,OAAO,CAAC,CAAC;IAAAO,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAhDE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACcjB,QAAQ,CAAC,IAAI,CAAC;IAAAkB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EAEpC,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,KAAA,EAA+B;IAAA,IAAzBX,SAAS,GAAAW,KAAA,CAATX,SAAS;MAAEI,OAAO,GAAAO,KAAA,CAAPP,OAAO;IAC7CH,YAAY,CAACD,SAAS,CAAC;IACvBK,UAAU,CAACD,OAAO,CAAC;IAEnB,IAAIV,iBAAiB,EAAE;MACrBA,iBAAiB,CAACM,SAAS,EAAEI,OAAO,CAAC;IACvC;EACF,CAAC;EAED,oBACEhB,KAAA,CAAAwB,aAAA,CAACtB,eAAe;IACdU,SAAS,EAAEA,SAAU;IACrBa,WAAW,EAAC,YAAY;IACxBT,OAAO,EAAEA,OAAQ;IACjBU,SAAS,EAAC,UAAU;IACpBC,aAAa,EAAEL,iBAAkB;IACjCF,YAAY,EAAEA,YAAa;IAC3BQ,aAAa,EAAE,SAAAA,cAACR,YAAY;MAAA,OAAKC,eAAe,CAACD,YAAY,CAAC;IAAA,CAAC;IAC/DS,cAAc,EAAE,CAAE;IAClBC,cAAc,EAAE,SAAAA,eAAA;MAAA,OAAM,KAAK;IAAA,CAAC;IAC5BC,cAAc,EAAE,IAAK;IACrBC,aAAa,EAAC,YAAY;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAC1B;AAEN,CAAC;AAED,eAAenC,aAAa"},"metadata":{},"sourceType":"module"}